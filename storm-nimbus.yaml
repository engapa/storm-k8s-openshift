kind: Template
apiVersion: v1
metadata:
  name: storm-nimbus
  annotations:
    openshift.io/display-name: Storm-Nimbus
    description: Storm Nimbus
    iconClass: icon-database
    tags: database,storm
labels:
  template: storm-nimbus
parameters:
- name: NAME
  value: "storm-nimbus"
  required: true
- name: REPLICAS
  description: Number of replicas
  required: true
  value: "1"
- name: VERSION
  value: "1.1.0"
  required: true
- name: USER
  description: User
  required: true
  value: "storm"
- name: CONF_DIR
  description: Conf directory
  required: true
  value: "/conf"
- name: DATA_DIR
  description: Data directory
  required: true
  value: "/data"
- name: LOG_DIR
  description: Log Directory
  required: true
  value: "/logs"
- name: RESOURCE_MEMORY_REQ
  description: The memory resource request.
  value: "1Gi"
- name: RESOURCE_MEMORY_LIMIT
  description: The limits for memory resource.
  value: "2Gi"
- name: RESOURCE_CPU_REQ
  description: The CPU resource request.
  value: "1"
- name: RESOURCE_CPU_LIMIT
  description: The limits for CPU resource.
  value: "2"

objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${NAME}
  spec:
    triggers:
    - type: ConfigChange
    strategy:
      type: Rolling
    replicas: ${REPLICAS}
    template:
      metadata:
        labels:
          app: ${NAME}
      spec:
        containers:
        - name: ${NAME}
          image: storm:${VERSION}
          env:
          - name: STORM_USER
            value: ${USER}
          - name: STORM_CONF_DIR
            value: ${CONF_DIR}
          - name: STORM_DATA_DIR
            value: ${DATA_DIR}
          - name: STORM_LOG_DIR
            value: ${LOG_DIR}
          command:
          - /bin/bash
          - -c
          - storm nimbus
          resources:
            requests:
              memory: ${RESOURCE_MEMORY_REQ}
              cpu: ${RESOURCE_CPU_REQ}
            limits:
              memory: ${RESOURCE_MEMORY_LIMIT}
              cpu: ${RESOURCE_CPU_LIMIT}
          imagePullPolicy: IfNotPresent
          terminationMessagePath: /dev/termination-log
          readinessProbe:
            tcpSocket:
              port: 6627
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 6627
            initialDelaySeconds: 15
            periodSeconds: 20
          volumeMounts:
          - name: config-volume
            mountPath: ${CONF_DIR}
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        volumes:
        - name: config-volume
          configMap:
            name: storm