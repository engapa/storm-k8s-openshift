kind: Template
apiVersion: v1
metadata:
  name: storm-monitor
  annotations:
    openshift.io/display-name: Storm-Monitor
    description: Storm Monitor
    iconClass: icon-database
    tags: database,storm
labels:
  template: storm-monitor
parameters:
- name: NAME
  value: "storm-monitor"
  required: true
- name: REPLICAS
  description: Number of replicas
  required: true
  value: "1"
- name: VERSION
  value: "1.1.0"
  required: true
- name: CONF_DIR
  description: Conf directory
  required: true
  value: "/conf"
- name: DATA_DIR
  description: Data directory
  required: true
  value: "/data"
- name: LOG_DIR
  description: Log Directory
  required: true
  value: "/logs"
- name: NIMBUS_TRHIFT_PORT
  description: Nimbus thrift port
  required: true
  value: '6627'
- name: NIMBUS_SVC_NAME
  description: Nimbus service name
  required: true
  value: "storm-nimbus"
- name: LOGVIEWER_PORT
  description: Nimbus thrift port
  required: true
  value: '8000'
- name: UI_PORT
  description: Nimbus thrift port
  required: true
  value: '8080'
- name: ZK_SERVERS
  description: "Zookeeper servers, value format must be: \"zk-server1\", \"zk-server2\" (Note quote marks)"
  required: true
  value: "\"zk-server1\", \"zk-server2\""
- name: NIMBUS_SEEDS
  description: >
    "Nimbus seeds, FQDN values for all seeds in the cluster,
     format must be: \"storm-nimbus-0.storm-nimbus\", \"storm-nimbus-1.storm-nimbus\" (Note quote marks)."
  required: true
  value: "\"storm-nimbus-0.storm-nimbus.myproject.svc.cluster.local\", \"storm-nimbus-1.storm-nimbus.myproject.svc.cluster.local\""
- name: CONFIG_FILE_CONTENS
  description: Add storm.yaml contents
  required: true
  value: |
    # These properties will be generated automatically by provided params
    # storm.zookeeper.servers
    # nimbus.thrift.port
    # nimbus.seeds
    # ui.port
    # logviewer.port
    # storm.log.dir
    # storm.local.dir
    # Add any other properties here
    ui.host: 0.0.0.0
    ui.childopts: "-Xmx768m"
    ui.actions.enabled: true
    ui.filter: null
    ui.filter.params: null
    ui.users: null
    ui.header.buffer.bytes: 4096
    ui.http.creds.plugin: org.apache.storm.security.auth.DefaultHttpCredentialsPlugin
- name: RESOURCE_MEMORY_REQ
  description: The memory resource request.
  value: "500Mi"
- name: RESOURCE_MEMORY_LIMIT
  description: The limits for memory resource.
  value: "1Gi"
- name: RESOURCE_CPU_REQ
  description: The CPU resource request.
  value: "500m"
- name: RESOURCE_CPU_LIMIT
  description: The limits for CPU resource.
  value: "1"

objects:

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${NAME}-config
    labels:
      app: ${NAME}
  data:
    storm.yaml: |
      ${CONFIG_FILE_CONTENS}
      # Generated properties
      logviewer.port: ${LOGVIEWER_PORT}
      ui.port: ${UI_PORT}
      storm.zookeeper.servers: [${ZK_SERVERS}]
      storm.zookeeper.root: "/${NAME}"
      nimbus.thrift.port: ${NIMBUS_TRHIFT_PORT}
      nimbus.seeds : [${NIMBUS_SEEDS}]
      storm.local.dir: "${DATA_DIR}"
      storm.log.dir: "${LOG_DIR}"
- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME}
    labels:
      app: ${NAME}
  spec:
    ports:
    - port: ${UI_PORT}
      name: ui
    clusterIP: None
    selector:
      app: ${NAME}

- apiVersion: v1
  kind: Pod
  metadata:
    name: ${NAME}
    labels:
      app: ${NAME}
  spec:
    containers:
    - name: ${NAME}-ui
      image: storm:${VERSION}
      command:
      - /bin/bash
      - -c
      args:
      - storm --config ${CONF_DIR}/storm.yaml ui
      imagePullPolicy: IfNotPresent
      terminationMessagePath: /dev/termination-log
      ports:
      - containerPort: ${UI_PORT}
        protocol: "TCP"
        name: ui
      readinessProbe:
        tcpSocket:
          port: ui
        initialDelaySeconds: 20
        periodSeconds: 5
      livenessProbe:
        tcpSocket:
          port: ui
        initialDelaySeconds: 20
        periodSeconds: 20
      volumeMounts:
      - name: config-volume
        mountPath: ${CONF_DIR}
      - name: data-volume
        mountPath: ${DATA_DIR}
      - name: log-volume
        mountPath: ${LOG_DIR}
    restartPolicy: Always
    terminationGracePeriodSeconds: 30
    volumes:
    - name: config-volume
      configMap:
        name: ${NAME}-config
    - name: data-volume
      emptyDir: {}
    - name: log-volume
      emptyDir: {}