kind: Template
apiVersion: v1
metadata:
  name: storm-drpc
  annotations:
    openshift.io/display-name: Storm-DRPC
    description: Storm DRPC
    iconClass: icon-database
    tags: database,storm
labels:
  template: storm-drpc
  component: storm
parameters:
- name: NAME
  value: "storm-drpc"
  required: true
- name: VERSION
  value: "1.1.1"
  required: true
- name: CONF_DIR
  description: Conf directory
  required: true
  value: "/conf"
- name: DATA_DIR
  description: Data directory
  required: true
  value: "/data"
- name: LOG_DIR
  description: Log Directory
  required: true
  value: "/logs"
- name: PORT
  description: Webconsole port
  required: true
  value: '6699'
- name: CONFIG_FILE_CONTENS
  description: Add storm-config.yaml contents
  required: true
  value: |
    # These properties will be generated automatically by provided params
    # pacemaker.port
    # storm.log.dir
    # storm.local.dir
    # Add any other properties here
    drpc.port: 3772
    drpc.worker.threads: 64
    drpc.max_buffer_size: 1048576
    drpc.queue.size: 128
    drpc.invocations.port: 3773
    drpc.invocations.threads: 64
    drpc.request.timeout.secs: 600
    drpc.childopts: "-Xmx768m"
    drpc.http.port: 3774
    drpc.https.port: -1
    drpc.https.keystore.password: ""
    drpc.https.keystore.type: "JKS"
    drpc.http.creds.plugin: org.apache.storm.security.auth.DefaultHttpCredentialsPlugin
    drpc.authorizer.acl.filename: "drpc-auth-acl.yaml"
    drpc.authorizer.acl.strict: false
- name: RESOURCE_MEMORY_REQ
  description: The memory resource request.
  value: "1024Mi"
  required: true
- name: RESOURCE_MEMORY_LIMIT
  description: The limits for memory resource.
  value: "1024Mi"
  required: true
- name: RESOURCE_CPU_REQ
  description: The CPU resource request.
  value: "500m"
  required: true
- name: RESOURCE_CPU_LIMIT
  description: The limits for CPU resource.
  value: "1"
  required: true

objects:

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${NAME}-config
    labels:
      app: ${NAME}
  data:
    storm.yaml: |
      ${CONFIG_FILE_CONTENS}
      # Generated properties
      storm.local.dir: "${DATA_DIR}"
      storm.log.dir: "${LOG_DIR}"
      pacemaker.port: ${PORT}

- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME}
    labels:
      app: ${NAME}
  spec:
    ports:
    - port: ${PORT}
      name: pacemaker
    clusterIP: None
    selector:
      app: ${NAME}

- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    name: ${NAME}
    labels:
      app: ${NAME}
    annotations:
      scheduler.alpha.kubernetes.io/affinity: >
        {
          "podAntiAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": [{
              "labelSelector": {
                "matchExpressions": [{
                  "key": "app",
                  "operator": "In",
                  "values": ["${NAME}"]
                }]
              },
              "topologyKey": "kubernetes.io/hostname"
            }]
          }
        }
  spec:
    serviceName: ${NAME}
    replicas: ${REPLICAS}
    selector:
      matchLabels:
        app: ${NAME}
    template:
      metadata:
        labels:
          app: ${NAME}
      spec:
        containers:
        - name: ${NAME}-pacemaker
          image: storm:${VERSION}
          command:
          - /bin/bash
          - -c
          args:
          - storm --config ${CONF_DIR}/storm.yaml pacemaker
          imagePullPolicy: IfNotPresent
          terminationMessagePath: /dev/termination-log
          ports:
          - containerPort: ${PORT}
            protocol: "TCP"
            name: pacemaker
          readinessProbe:
            tcpSocket:
              port: pacemaker
            initialDelaySeconds: 20
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: pacemaker
            initialDelaySeconds: 20
            periodSeconds: 20
          volumeMounts:
          - name: config-volume
            mountPath: ${CONF_DIR}
          - name: data-volume
            mountPath: ${DATA_DIR}
          - name: log-volume
            mountPath: ${LOG_DIR}
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        volumes:
        - name: config-volume
          configMap:
            name: ${NAME}-config
        - name: data-volume
          emptyDir: {}
        - name: log-volume
          emptyDir: {}
